name: Build & Deploy App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build with Docker Compose
        run: docker compose build
          
      - name: List Docker images
        run: docker images
        
      - name: Tag and Push Docker Image
        run: |
          docker tag docker-k8s-challenge-app:latest ${{ secrets.DOCKER_USERNAME }}/docker-k8s-challenge_app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-k8s-challenge_app:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

   
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y conntrack socat iptables ebtables ethtool openssl
          
          # Install Docker from official repo
          sudo apt-get remove -y containerd containerd.io
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          
          # Add Docker's official GPG key
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          
          # Add Docker repository
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          
          # Install crictl
          VERSION="v1.28.0"
          curl -LO "https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz"
          sudo tar -C /usr/local/bin -xzf "crictl-$VERSION-linux-amd64.tar.gz"
          rm "crictl-$VERSION-linux-amd64.tar.gz"
  
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
  
      - name: Start Minikube
        run: |
          sudo minikube start --driver=none --kubernetes-version=v1.28.0
          minikube status
  
      - name: Configure kubectl
        run: |
          sudo minikube kubectl -- get pods -A
          sudo minikube kubectl -- cluster-info
  
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/
          kubectl get all -A
